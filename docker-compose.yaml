version: "3"
services:
  app:
    build: ./app/
    image: event-planner-api:latest
    container_name: event-planner-api
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./app:/app
      - ./data:/app/data
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      - event-planner-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - "8080:8080"

  ml_worker:
    build: ./ml_worker/
    image: event-planner-ml-worker:latest
    container_name: event-planner-ml-worker
    restart: unless-stopped
    environment:
      - RABBITMQ_USER=rmuser
      - RABBITMQ_PASS=rmpassword
    volumes:
      - ./ml_worker:/app
    depends_on:
      - db
      - rabbitmq
    networks:
      - event-planner-network

  web:
    image: nginx:latest
    container_name: event-planner-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    depends_on:
      - app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - event-planner-network

  db:
    image: postgres:16-alpine
    container_name: event-planner-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - event-planner-network

  redis:
    image: redis:7-alpine
    container_name: event-planner-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - event-planner-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.13.1-management-alpine
    container_name: rabbitmq_for_planner
    hostname: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 20s
      timeout: 10s
      retries: 3
    networks:
      - event-planner-network

  frontend:
    build: ./smart-shop-frontend/
    image: smart-shop-frontend:latest
    container_name: smart-shop-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - app
    volumes:
      - ./smart-shop-frontend/src:/app/src
      - ./smart-shop-frontend/public:/app/public
    networks:
      - event-planner-network
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  rabbitmq_data:

networks:
  event-planner-network:
    name: event-planner-network
    driver: bridge